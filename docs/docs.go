// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscription": {
            "put": {
                "description": "Обновляет данные подписки (частично или полностью)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Обновить подписку",
                "parameters": [
                    {
                        "description": "Данные для обновления подписки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Создаёт новую подписку для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Создать подписку",
                "parameters": [
                    {
                        "description": "Данные для создания подписки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/subscription/{id}": {
            "get": {
                "description": "Возвращает данные конкретной подписки по её уникальному идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить подписку по ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет подписку по её уникальному идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Удалить подписку",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "Возвращает список всех подписок с пагинацией",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить список подписок",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 0,
                        "description": "Смещение (по умолчанию 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "Лимит записей (по умолчанию 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SubscriptionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/subscriptions/total": {
            "get": {
                "description": "Возвращает суммарную стоимость подписок за указанный период с возможностью фильтрации по пользователю и сервису",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить общую сумму подписок",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"01-2025\"",
                        "description": "Дата начала периода (MM-YYYY)",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"12-2025\"",
                        "description": "Дата окончания периода (MM-YYYY)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"60601fee-2bf1-4721-ae6f-7636e79a0cba\"",
                        "description": "ID пользователя (UUID)",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Yandex Plus\"",
                        "description": "Название сервиса",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpHelpers.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "description": "Формат MM-YYYY",
                    "type": "string",
                    "example": "01-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "dto.SubscriptionListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SubscriptionResponse"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "dto.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-10-28T10:00:00Z"
                },
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "description": "Формат: MM-YYYY",
                    "type": "string",
                    "example": "01-2025"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-10-28T10:00:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "dto.UpdateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "01-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        },
        "httpHelpers.ErrorMessage": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "httpHelpers.SuccessMessage": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Subscription API",
	Description:      "API для управления подписками пользователей.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
